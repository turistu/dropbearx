#! /bin/sh
umask 066
unset IFS
err=0
set -e
tmpdir=$(mktemp -d)
onexit(){
	status=$?
	set +e
	pkill -g0 "dropbear|dbclient"; wait
	[ "$status" = 0 ] || { echo '========='; cat LOG >&2; }
	rm -fr "$tmpdir"
}
trap onexit EXIT INT
s=${1:-.}
case $s in /*);; *) s=$(pwd)/$s;; esac

cd "$tmpdir"
HOME=$tmpdir
"$s/dropbearkey" -t ed25519 -f key >>LOG 2>&1
"$s/dropbearkey" -y -f key > key.pub+
grep ^ssh key.pub+ > key.pub
rm key.pub+
awk '{print "localhost", $1, $2 }' key.pub > known_hosts

port=2222
"$s/dropbear" -p $port -FE -r key -A key.pub 2>>LOG &
sleep .2

check(){
	pat=$(printf "$1"); shift
	printf '\n<<<<<<<<'; printf ' %s' "$@"; echo
	case $# in 1) out=$(eval "$1");; *) out=$("$@"); esac
	out=$?:$out
	printf '>>>>>>>> ';
	case $out in
	$pat)	printf 'OK\n\n';;
	*)	
		out=$(printf %s "$out" | cat -v)
		printf 'FAIL <%s> !~ <%s>\n\n' "$out" "$pat"; err=1;;
	esac
}
dssh(){
	"$s/dbclient" -i key "$@"
}
dssh_h(){ dssh -o UserKnownHostsFile=known_hosts "$@"; }

stuff=$$
hcheck(){
	t=$0$((stuff=stuff+1))
	check "0:$t" dssh_h "$@" localhost echo "$t"
}

##################################################################

check '0:test' dssh -y -p $port localhost echo test
hcheck -p $port
check '0:test\r' dssh_h -t -p $port localhost echo test
check 0:foobar dssh_h -p $port localhost '{ sleep .5; echo bar; } & printf foo'

dssh_h \
	-R 8888:localhost:$port \
	-L 7777:localhost:$port \
	-R 0:localhost:$port \
	-L 0:localhost:$port \
	-p $port -N localhost 2>&1 | tee stderr &
sleep .3
eval $(awk '/Allocated port [0-9]+ for (local|remote)/{print $6"_port="$4}' stderr)

#hcheck -p $port -o ExitOnForwardFailure=1 -R 8:localhost:$port
hcheck -p 7777
hcheck -p 8888
hcheck -p $remote_port
hcheck -p $local_port

##################################################################

echo STATUS $err
exit $err
